# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  tags:
    include:
      - '*.*'

pool:
  vmImage: ubuntu-latest

resources:
  - repo: self

variables:
  tag: 'dashboard-$(Build.SourceBranchName)'
  repoServiceConnection: 'akaDockerRegistryServiceConnection'
  imageName: 'sagtestclient/aron-docker'
  k8sNamespace: 'aka-dashboard'
  azureSubscriptionEndpoint: 'aka-resource-manager-service-connection'
  azureResourceGroup: 'apigw-dashboard'
  kubernetesCluster: 'dashboard'


stages:
  - stage: Build
    displayName: Build image
    jobs:
    - job: BuildAndPublish
      displayName: Build and Publish
      steps:
        - task: Docker@2
          displayName: Build image
          inputs:
            repository: $(imageName)
            command: build
            dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
            tags: |
              $(tag)
              $(Build.BuildNumber)
        - task: Docker@2
          displayName: Push image to repo
          condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))
          inputs:
            containerRegistry: $(repoServiceConnection)
            repository: $(imageName)
            command: push
            tags: |
              $(tag)
  
  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    jobs:
      - deployment: Deploy
        displayName: Deploy job
        environment: 'AronKaSAGapigwcicddashboard' #customize with your environment
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: repo
                # - task: KubernetesManifest@0
                #   displayName: Create imagePullSecret
                #   inputs:
                #     action: createSecret
                #     secretName: $(imagePullSecret)
                #     namespace: $(k8sNamespace)
                #     dockerRegistryEndpoint: $(repoServiceConnection)
                # TODO: login to kubernetes cluster -> Kubernetes@1
                # TODO: update/create image pull secret -> Kubernetes@1
                # TODO: kubernetes apply manifest.yaml
                - task: Kubernetes@1
                  displayName: kubectl apply using configFile
                  inputs:
                    connectionType: Azure Resource Manager
                    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
                    azureResourceGroup: $(azureResourceGroup)
                    kubernetesCluster: $(kubernetesCluster)
                    namespace: $(k8sNamespace)
                    command: apply
                    useConfigurationFile: true
                    configuration: '$(Build.SourcesDirectory)/dashboard_deployment.yaml'
